['//test assignment operators', '//test In/Decrement operators', '//test Conditional operators', '//test Bitwise operators', '//test Special operators', '/* \n        Shah Yash \n        */']
< int , TypeSpecifier >
< main , Identifier >
< ( , LParen >
< ) , RParen >
< { , LBracket >
< unsigned , TypeSpecifier >
< int , TypeSpecifier >
< a , Identifier >
< = , AssignmentOperator >
< 2 , NumConst >
< ; , Semicolon >
< auto , TypeSpecifier >
< int , TypeSpecifier >
< b , Identifier >
< = , AssignmentOperator >
< 99 , NumConst >
< ; , Semicolon >
< struct , TypeSpecifier >
< d , Identifier >
< ; , Semicolon >
< typedef , Identifier >
< signed , TypeSpecifier >
< long , TypeSpecifier >
< slong , Identifier >
< ; , Semicolon >
< char , TypeSpecifier >
< e , Identifier >
< = , AssignmentOperator >
< ; , Semicolon >
< union , TypeSpecifier >
< f , Identifier >
< ; , Semicolon >
< register , Keyword >
< short , TypeSpecifier >
< g , Identifier >
< = , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< long , TypeSpecifier >
< h , Identifier >
< = , AssignmentOperator >
< 99999999 , NumConst >
< ; , Semicolon >
< static , TypeSpecifier >
< volatile , TypeSpecifier >
< enum , TypeSpecifier >
< i , Identifier >
< ; , Semicolon >
< const , TypeSpecifier >
< float , TypeSpecifier >
< j , Identifier >
< = , AssignmentOperator >
< 3.14 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< arr , Identifier >
< [ , LCurly >
< 10 , NumConst >
< ] , RCurly >
< ; , Semicolon >
< if , Keyword >
< ( , LParen >
< a , Identifier >
< + , ArithmeticOperator >
< b , Identifier >
< - , ArithmeticOperator >
< c , Identifier >
< * , ArithmeticOperator >
< g , Identifier >
< / , ArithmeticOperator >
< j , Identifier >
< % , ArithmeticOperator >
< h , Identifier >
< == , ComparisonOperator >
< 42 , NumConst >
< ) , RParen >
< { , LBracket >
< } , RParen >
< else , Keyword >
< if , Keyword >
< ( , LParen >
< a , Identifier >
< != , ComparisonOperator >
< b , Identifier >
< && , LogicalOperator >
< a , Identifier >
< > , RAngle >
< b , Identifier >
< || , LogicalOperator >
< ! , LogicalOperator >
< ( , LParen >
< a , Identifier >
< < , LAngle >
< b , Identifier >
< ) , RParen >
< ) , RParen >
< { , LBracket >
< if , Keyword >
< ( , LParen >
< a , Identifier >
< <= , ComparisonOperator >
< b , Identifier >
< ) , RParen >
< { , LBracket >
< return , Keyword >
< 1 , NumConst >
< ; , Semicolon >
< } , RParen >
< if , Keyword >
< ( , LParen >
< a , Identifier >
< >= , ComparisonOperator >
< b , Identifier >
< ) , RParen >
< { , LBracket >
< return , Keyword >
< 2 , NumConst >
< ; , Semicolon >
< } , RParen >
< } , RParen >
< else , Keyword >
< { , LBracket >
< return , Keyword >
< 3 , NumConst >
< ; , Semicolon >
< } , RParen >
< for , Keyword >
< ( , LParen >
< a , Identifier >
< = , AssignmentOperator >
< 0 , NumConst >
< ; , Semicolon >
< a , Identifier >
< < , LAngle >
< 10 , NumConst >
< ; , Semicolon >
< a , Identifier >
< ++ , Increment >
< { , LBracket >
< if , Keyword >
< ( , LParen >
< a , Identifier >
< < , LAngle >
< 8 , NumConst >
< ) , RParen >
< { , LBracket >
< continue , Keyword >
< ; , Semicolon >
< } , RParen >
< } , RParen >
< switch , Keyword >
< ( , LParen >
< a , Identifier >
< ) , RParen >
< { , LBracket >
< case , Keyword >
< 9 , NumConst >
< : , Colon >
< a , Identifier >
< = , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< break , Keyword >
< ; , Semicolon >
< default , Keyword >
< : , Colon >
< a , Identifier >
< = , AssignmentOperator >
< 0 , NumConst >
< ; , Semicolon >
< break , Keyword >
< ; , Semicolon >
< } , RParen >
< label , Identifier >
< : , Colon >
< printf , Identifier >
< ( , LParen >
< ) , RParen >
< ; , Semicolon >
< do , Keyword >
< { , LBracket >
< a , Identifier >
< = , AssignmentOperator >
< a , Identifier >
< + , ArithmeticOperator >
< 1 , NumConst >
< ; , Semicolon >
< } , RParen >
< while , Keyword >
< ( , LParen >
< a , Identifier >
< < , LAngle >
< 10 , NumConst >
< ) , RParen >
< ; , Semicolon >
< return , Keyword >
< 0 , NumConst >
< ; , Semicolon >
< } , RParen >
< void , TypeSpecifier >
< func , Identifier >
< ( , LParen >
< int , TypeSpecifier >
< param1 , Identifier >
< , , Comma >
< int , TypeSpecifier >
< param2 , Identifier >
< ) , RParen >
< { , LBracket >
< int , TypeSpecifier >
< aa , Identifier >
< = , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< bb , Identifier >
< = , AssignmentOperator >
< 2 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< cc , Identifier >
< = , AssignmentOperator >
< 3 , NumConst >
< ; , Semicolon >
< aa , Identifier >
< += , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< -= , AssignmentOperator >
< 2 , NumConst >
< ; , Semicolon >
< cc , Identifier >
< *= , AssignmentOperator >
< 9 , NumConst >
< ; , Semicolon >
< cc , Identifier >
< /= , AssignmentOperator >
< 3 , NumConst >
< ; , Semicolon >
< aa , Identifier >
< %= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< <<= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< >>= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< &= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< ^= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< bb , Identifier >
< |= , AssignmentOperator >
< 1 , NumConst >
< ; , Semicolon >
< cc , Identifier >
< ++ , Increment >
< cc , Identifier >
< -- , Decrement >
< int , TypeSpecifier >
< check , Identifier >
< == , ComparisonOperator >
< aa , Identifier >
< == , ComparisonOperator >
< 3 , NumConst >
< aa , Identifier >
< > , RAngle >
< 3 , NumConst >
< : , Colon >
< return , Keyword >
< ; , Semicolon >
< int , TypeSpecifier >
< dd , Identifier >
< = , AssignmentOperator >
< cc , Identifier >
< >> , BitwiseOperator >
< 3 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< ee , Identifier >
< = , AssignmentOperator >
< dd , Identifier >
< << , BitwiseOperator >
< 1 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< ff , Identifier >
< = , AssignmentOperator >
< ~ , BitwiseOperator >
< ee , Identifier >
< ; , Semicolon >
< int , TypeSpecifier >
< gg , Identifier >
< = , AssignmentOperator >
< ff , Identifier >
< & , BitwiseOperator >
< 1 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< hh , Identifier >
< = , AssignmentOperator >
< gg , Identifier >
< | , BitwiseOperator >
< 0 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< ii , Identifier >
< = , AssignmentOperator >
< gg , Identifier >
< ^ , BitwiseOperator >
< 1 , NumConst >
< ; , Semicolon >
< int , TypeSpecifier >
< size , Identifier >
< = , AssignmentOperator >
< sizeof , Keyword >
< ( , LParen >
< aa , Identifier >
< ) , RParen >
< ; , Semicolon >
< char , TypeSpecifier >
< * , ArithmeticOperator >
< apple , Identifier >
< = , AssignmentOperator >
< ; , Semicolon >
< int , TypeSpecifier >
< where , Identifier >
< = , AssignmentOperator >
< & , BitwiseOperator >
< apple , Identifier >
< ; , Semicolon >
< return , Keyword >
< ; , Semicolon >
< } , RParen >
< void , TypeSpecifier >
< func2 , Identifier >
< ( , LParen >
< int , TypeSpecifier >
< param1 , Identifier >
< ) , RParen >
< { , LBracket >
< if , Keyword >
< ( , LParen >
< param1 , Identifier >
< % , ArithmeticOperator >
< 2 , NumConst >
< == , ComparisonOperator >
< 0 , NumConst >
< ) , RParen >
< { , LBracket >
< goto , Keyword >
< even , Identifier >
< ; , Semicolon >
< } , RParen >
< else , Keyword >
< { , LBracket >
< goto , Keyword >
< odd , Identifier >
< ; , Semicolon >
< } , RParen >
< even , Identifier >
< : , Colon >
< return , Keyword >
< ; , Semicolon >
< odd , Identifier >
< : , Colon >
< return , Keyword >
< ; , Semicolon >
< } , RParen >
